// Smooth scroll for navigation links
document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function(e) {
      e.preventDefault();
      const target = document.querySelector(this.getAttribute('href'));
      if (target) {
        target.scrollIntoView({
          behavior: 'smooth'
        });
        
        // Close mobile menu if open
        document.querySelector('.nav-menu').classList.remove('active');
        document.querySelector('.mobile-menu-toggle i').className = 'fas fa-bars';
      }
    });
  });
  
  // Mobile menu toggle
  document.querySelector('.mobile-menu-toggle').addEventListener('click', function() {
    const menu = document.querySelector('.nav-menu');
    const icon = this.querySelector('i');
    
    menu.classList.toggle('active');
    
    if (menu.classList.contains('active')) {
      icon.className = 'fas fa-times';
    } else {
      icon.className = 'fas fa-bars';
    }
  });
  
  // Theme toggle functionality
  const themeToggle = document.getElementById('themeToggle');
  const body = document.body;
  const themeIcon = themeToggle.querySelector('i');
  
  // Check for saved theme preference or use preferred color scheme
  const savedTheme = localStorage.getItem('theme') || 
                     (window.matchMedia('(prefers-color-scheme: light)').matches ? 'light' : 'dark');
  
  // Apply saved theme
  if (savedTheme === 'light') {
    body.classList.add('light-theme');
    themeIcon.className = 'fas fa-sun';
  } else {
    body.classList.remove('light-theme');
    themeIcon.className = 'fas fa-moon';
  }
  
  // Toggle theme on button click
  themeToggle.addEventListener('click', () => {
    body.classList.toggle('light-theme');
    const isLight = body.classList.contains('light-theme');
    
    themeIcon.className = isLight ? 'fas fa-sun' : 'fas fa-moon';
    localStorage.setItem('theme', isLight ? 'light' : 'dark');
  });
  
  // Back to top button
  const backToTopBtn = document.querySelector('.back-to-top');
  
  window.addEventListener('scroll', () => {
    if (window.pageYOffset > 300) {
      backToTopBtn.classList.add('active');
    } else {
      backToTopBtn.classList.remove('active');
    }
  });
  
  // Animate elements when they come into view
  const animateOnScroll = () => {
    const elements = document.querySelectorAll('.animate__animated');
    
    elements.forEach(element => {
      const elementPosition = element.getBoundingClientRect().top;
      const screenPosition = window.innerHeight / 1.2;
      
      if (elementPosition < screenPosition) {
        const animation = element.getAttribute('data-animation') || 'fadeInUp';
        element.classList.add(`animate__${animation}`);
      }
    });
  };
  
  window.addEventListener('scroll', animateOnScroll);
  window.addEventListener('load', animateOnScroll);
  
  // Testimonial slider
  let currentTestimonial = 0;
  const testimonials = document.querySelectorAll('.testimonial');
  const testimonialCount = testimonials.length;
  
  const showTestimonial = (index) => {
    testimonials.forEach(testimonial => testimonial.classList.remove('active'));
    testimonials[index].classList.add('active');
  };
  
  document.querySelector('.testimonial-next').addEventListener('click', () => {
    currentTestimonial = (currentTestimonial + 1) % testimonialCount;
    showTestimonial(currentTestimonial);
  });
  
  document.querySelector('.testimonial-prev').addEventListener('click', () => {
    currentTestimonial = (currentTestimonial - 1 + testimonialCount) % testimonialCount;
    showTestimonial(currentTestimonial);
  });
  
  // Auto-rotate testimonials
  let testimonialInterval = setInterval(() => {
    currentTestimonial = (currentTestimonial + 1) % testimonialCount;
    showTestimonial(currentTestimonial);
  }, 5000);
  
  // Pause auto-rotation when hovering
  const testimonialSlider = document.querySelector('.testimonials-slider');
  testimonialSlider.addEventListener('mouseenter', () => {
    clearInterval(testimonialInterval);
  });
  
  testimonialSlider.addEventListener('mouseleave', () => {
    testimonialInterval = setInterval(() => {
      currentTestimonial = (currentTestimonial + 1) % testimonialCount;
      showTestimonial(currentTestimonial);
    }, 5000);
  });
  
  // Donation form handling
  const donationForm = document.getElementById('donationForm');
  const amountOptions = document.querySelectorAll('.amount-option');
  
  amountOptions.forEach(option => {
    option.addEventListener('click', function() {
      amountOptions.forEach(opt => opt.classList.remove('active'));
      this.classList.add('active');
      document.getElementById('amount').value = this.getAttribute('data-amount');
    });
  });
  
  donationForm.addEventListener('submit', function(e) {
    e.preventDefault();
    
    const amount = document.getElementById('amount').value;
    const paymentMethod = document.getElementById('paymentMethod').value;
    const donationType = document.getElementById('donationType').value;
    const frequency = document.querySelector('input[name="frequency"]:checked').value;
    
    if (!amount || amount <= 0) {
      alert('Please enter a valid donation amount.');
      return;
    }
    
    if (!paymentMethod) {
      alert('Please select a payment method.');
      return;
    }
    
    // In a real app, you would process the payment here
    // For demo purposes, we'll show a success message
    
    const causeNames = {
      'general': 'General Fund',
      'education': 'Education Programs',
      'healthcare': 'Healthcare Initiatives',
      'water': 'Clean Water Projects',
      'disaster': 'Disaster Relief'
    };
    
    const paymentMethods = {
      'card': 'Credit/Debit Card',
      'bank': 'Bank Transfer',
      'ussd': 'USSD',
      'paypal': 'PayPal'
    };
    
    const modal = document.getElementById('donationModal');
    const modalContent = modal.querySelector('.modal-body');
    
    modalContent.querySelector('h3').textContent = 'Donation Successful!';
    modalContent.querySelector('p').innerHTML = `
      Thank you for your ${frequency === 'monthly' ? 'monthly' : ''} donation of <strong>â‚¦${parseInt(amount).toLocaleString()}</strong> 
      to support our <strong>${causeNames[donationType]}</strong> via <strong>${paymentMethods[paymentMethod]}</strong>.
      Your contribution will help transform lives across Nigeria.
    `;
    
    modal.classList.add('active');
    
    // Reset form
    donationForm.reset();
    amountOptions.forEach(opt => opt.classList.remove('active'));
  });
  
  // Close modal
  document.querySelectorAll('.modal-close, .modal-close-btn').forEach(btn => {
    btn.addEventListener('click', () => {
      document.getElementById('donationModal').classList.remove('active');
    });
  });
  
  // Contact form handling
  document.getElementById('contactForm').addEventListener('submit', function(e) {
    e.preventDefault();
    
    const name = document.getElementById('contactName').value;
    const email = document.getElementById('contactEmail').value;
    const message = document.getElementById('contactMessage').value;
    
    if (!name || !email || !message) {
      alert('Please fill in all required fields.');
      return;
    }
    
    // In a real app, you would send this data to your server
    alert(`Thank you, ${name}! Your message has been received. We'll contact you at ${email} soon.`);
    this.reset();
  });
  
  // Animate stats counter
  const animateStats = () => {
    const statNumbers = document.querySelectorAll('.stat-number');
    const speed = 200;
    
    statNumbers.forEach(stat => {
      const target = +stat.getAttribute('data-count');
      const count = +stat.innerText;
      const increment = target / speed;
      
      if (count < target) {
        stat.innerText = Math.ceil(count + increment);
        setTimeout(animateStats, 1);
      } else {
        stat.innerText = target.toLocaleString();
      }
    });
  };
  
  // Only animate stats when they come into view
  const statsSection = document.querySelector('.about-section');
  const statsObserver = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        animateStats();
        statsObserver.unobserve(entry.target);
      }
    });
  }, { threshold: 0.5 });
  
  statsObserver.observe(statsSection);
  
  // Newsletter form handling
  document.querySelector('.newsletter-form').addEventListener('submit', function(e) {
    e.preventDefault();
    const email = this.querySelector('input').value;
    
    if (!email) {
      alert('Please enter your email address.');
      return;
    }
    
    // In a real app, you would send this to your server
    alert(`Thank you for subscribing with ${email}! You'll receive our updates soon.`);
    this.reset();
  });